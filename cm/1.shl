#!/bin/bash
#***********************************************************************
#
#  University of South Florida
#  Student Information System
#  Program Unit Information
#
#  General Information
#  -------------------
#  Shell Script Name  : mergetest
#  Process Associated : git
#  Object Source File Location and Name : z:\github\cm\mergetest.shl
#  Business Logic : 
#   Explain business logic here.
#
#
# Audit Trail (in descending date order)
# ------------------------------------  
#      Date         User         Reason For Change
#   ---------       ------     -----------------------
#    9/23/2013       VBANGALO     Initial Creation 
#   
#************************************************************************
. checkoutissue.shl
echo "in cm mergetest"

pwd
echo "creating directory ${issue}"
if [ -d ../${issue} ]; then
  rm -rf ../${issue}
fi
mkdir ../${issue}
chmod 777 /..${issue}
# get all branches with test extention
git checkout ${issue}
# get all changes made by this issue
brbase=`git merge-base ${issue} master`
git diff --name-status ${brbase} | grep ^M | cut -f2 > ../${issue}/${issue}_master.txt
chmod 777 ../${issue}/${issue}_master.txt
for br in `git branch | grep test$ | grep \#`
do
   # check if there are any files that have modified and common in other branches also
   brbase=`git merge-base $br master`
   if [ `git diff --name-status  $br $brbase | grep ^M | cut -f2 | wc -l` -gt 0 ];then
      echo "branch is $br"
	  git diff --name-status  $br $brbase | grep ^M | cut -f2  >>  ../${issue}/${issue}_branch.txt
      IFS=$'\n'       # make newlines the only separator
      set -f          # disable globbing
      for i in $(cat ../${issue}/${issue}_master.txt); do
        echo $i
        echo "grepping from "
        cat ../${issue}/${issue}_branch.txt
        grep $i ../${issue}/${issue}_branch.txt
        if [ `grep $i ../${issue}/${issue}_branch.txt | wc -l` -gt 0 ];then
          echo " ${br}  $i" >> ../${issue}/${issue}_status.txt
          echo " ${br}  $i"
          chmod 777 ../${issue}/${issue}_status.txt
        fi
      done
   fi
done 
if [ -f  ../${issue}/${issue}_status.txt ];then
   cat ../${issue}/${issue}_status.txt
   echo "There are some conflicts in this issue as shown above. Are these resolved?"
   read res
   if [ $res == "no" ]; then
     echo " Please check with developers. Ok?"
     read cnflt
     exit 2
   fi
fi
